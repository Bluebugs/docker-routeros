name: "Check for update on Mikrotik website and generate a PR if necessary"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  routeros:
    name: "Build & Test images"
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            fetch-depth: '0'

      - name: Check new release
        id: check_release
        run: |
          LAST_MIKROTIK_RELEASE=$(curl https://mikrotik.com/download/archive -o - 2>/dev/null |         grep -o '<a href=['"'"'"][^"'"'"']*['"'"'"]' |         sed -e 's/^<a href=["'"'"']//' -e 's/["'"'"']$//' |         grep -i vdi |         sed 's:.*/::' |         sort -V | tail -n 1 | sed -r 's/chr\-(.*)\.vdi/\1/gi'| sed -r 's/\.zip//gi')
          NEW_TAG=$(grep "ROUTEROS_VERSION=\"" Dockerfile |cut -d "\"" -f 2)
          if [ "$LAST_MIKROTIK_RELEASE" != "$NEW_TAG" ]; then
            echo "New version found: $LAST_MIKROTIK_RELEASE"
            echo "Current version: $NEW_TAG"
            echo "release=$LAST_MIKROTIK_RELEASE" > "$GITHUB_OUTPUT"
            echo "new=true" >> "$GITHUB_OUTPUT"
          else
            echo "No new version found"
            echo "new=false" >> "$GITHUB_OUTPUT"
          fi

      - name: create pull request
        if: ${{ steps.check_release.outputs.new == 'true' }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          sed -r "s/(ROUTEROS_VERSION=\")(.*)(\")/\1${{ steps.check_release.outputs.release }}\3/g" -i Dockerfile
          git checkout -b update-routeros
          git commit -m "Update RouterOS version to ${{ steps.check_release.outputs.release }}" Dockerfile

      - name: push pull request
        if: ${{ steps.check_release.outputs.new == 'true' && !env.ACT }}
        run: gh pr create -B origin/master -H update-routeros --title 'Update RouterOS version to ${{ steps.check_release.outputs.release }}' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}